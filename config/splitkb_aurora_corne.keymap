/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    behaviors {
        homerow_mods_left: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            hold-trigger-key-positions = <38 37 36 0 1 2 3 4 5 12 13 14 15 16 17 24 25 26 27 28 29>;
            quick-tap-ms = <100>;
            hold-trigger-on-release;
            global-quick-tap;
        };
        hrm_right: hrm_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM_RIGHT";
            bindings =
                <&kp>,
                <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <100>;
            global-quick-tap;
            flavor = "balanced";
            hold-trigger-on-release;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21 22 23 30 31 32 33 34 35 39 40 41>;
        };
    };

    combos {
        compatible = "zmk,combos";

        tab_combo {
            bindings = <&kp TAB>;
            key-positions = <15 16>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            //   ESC
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | SPC | LWR |   | RSE | ENT  | ALT |

            bindings = <
      &kp TAB                          &kp Q                              &kp W                          &kp E                            &kp R      &kp T        &kp Y          &kp U      &kp I                       &kp O                           &kp P    &none
&mt LCTRL ESC  &homerow_mods_left LEFT_ALT A  &homerow_mods_left LEFT_CONTROL S  &homerow_mods_left LEFT_GUI D  &homerow_mods_left LEFT_SHIFT F      &kp G        &kp H          &kp J      &kp K  &hrm_right RIGHT_CONTROL L  &hrm_right RIGHT_ALT SEMICOLON  &kp SQT
    &kp LSHFT                          &kp Z                              &kp X                          &kp C                            &kp V      &kp B        &kp N          &kp M  &kp COMMA                     &kp DOT                       &kp MINUS  &kp ESC
                                                                                                      &kp LGUI                            &mo 1  &kp SPACE    &kp ENTER  &kp BACKSPACE      &mo 2
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp EXCLAMATION        &kp AT     &kp POUND    &kp DOLLAR   &kp PERCENT    &kp CARET      &kp LEFT_BRACKET  &kp AMPERSAND      &kp RIGHT_BRACKET  &kp QUESTION   &kp BSPC
&trans     &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5     &kp PLUS  &kp LEFT_PARENTHESIS      &kp EQUAL  &kp RIGHT_PARENTHESIS  &kp ASTERISK  &kp GRAVE
&trans     &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0        &none         &kp BACKSLASH  &kp LESS_THAN       &kp GREATER_THAN     &kp SLASH  &kp ENTER
                                             &trans     &kp SPACE        &trans       &trans               &kp RET         &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            //   ESC
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans      &kp EXCL        &kp AT      &kp HASH      &kp DLLR     &kp PRCNT         &kp CARET  &kp NUMBER_0  &kp LEFT_BRACKET  &kp RIGHT_BRACKET    &trans   &kp BSPC
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5    &kp LEFT_ARROW      &kp DOWN      &kp UP_ARROW          &kp RIGHT    &trans  &kp GRAVE
&trans  &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0             &none         &none            &trans             &trans  &kp PIPE  &kp TILDE
                                          &trans        &trans     &kp SPACE           &kp RET        &trans            &trans
            >;
        };
    };
};
